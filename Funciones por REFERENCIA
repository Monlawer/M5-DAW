#include <iostream>
#include <cstdlib>
#include <ctime>
#include <windows.h>

using namespace std;
//PlaySound(TEXT("pok.wav"), NULL, SND_LOOP | SND_ASYNC);

int enemyHP1 = 364;
string enemyName1 = "Kyurem";
bool enemyIsAlive1 = true;
int enemyHP2 = 394;
string enemyName2 = "Reshiram";
bool enemyIsAlive2 = true;
int heroHP = 200;
int heroDamage;
string heroName;
bool heroIsAlive = true;
int enemyChoosed = 0;
int magicPoints = 2;
int sopapoValue = 10;
int espadazoValue = 30;
int magicValue = 50;

void gameStart() {
	cout << "Han aparecido dos pokemons salvajes, " << enemyName1 << " y " << enemyName2 << " ambos te atacan en la hierba alta""\n";
	cout << "Como se llama el heroe?\n";
	cin >> heroName;
	cout << "El nombre del heroe es " << heroName << "\n";
}
bool checkEnemyStatus(string enemyName1, int enemyHP1, string enemyName2, int enemyHP2) {
	if (enemyHP1 <= 0) {
		cout << "Te has cargado al enemigo " << enemyName1 << " \n";
		enemyHP1 = 0;
	}
	else {
		cout << "El enemigo " << enemyName1 << " tiene " << enemyHP1 << " puntos de vida\n";
	}
	if (enemyHP2 <= 0) {
		cout << "Te has cargado al enemigo " << enemyName2 << " \n";
		enemyHP2 = 0;
	}
	else {
		cout << "El enemigo " << enemyName2 << " tiene " << enemyHP2 << " puntos de vida\n";
	}
	if (enemyHP1 <= 0 && enemyHP2 <= 0) {
		return false;
	}
	else {
		return true;
	}
}int chooseEnemy() {
	int enemyChoose = 0;
	while (enemyChoose != 1 && enemyChoose != 2) {
		cout << "A que enemigo quieres atacar? \n";
		if (enemyIsAlive1) {
			cout << "1.- " << enemyName1 << "\n";
		}
		if (enemyIsAlive2) {
			cout << "2.- " << enemyName2 << "\n";
		}
		cin >> enemyChoose;
		if (enemyChoose <= 0 || enemyChoose > 2) {
			cout << "La opcion elegida no es correcta. Por favor, elige una opcion valida. \n";
		}
		if (!enemyIsAlive1 && enemyChoose == 1) {
			cout << "El enemigo " << enemyName1 << " ya esta muerto. Por favor, elige un enemigo que todavia este vivo." " \n";
			enemyChoose = 0;
		}
		if (!enemyIsAlive2 && enemyChoose == 2) {
			cout << "El enemigo " << enemyName2 << " ya esta muerto. Por favor, elige un enemigo que todavia este vivo." " \n";
			enemyChoose = 0;
		}
	}
	return enemyChoose;
}
int chooseAttack() {
	int attackChoose = 0;
	while (attackChoose != 1 && attackChoose != 2 && attackChoose != 3) {
		cout << "Que ataque quieres usar? \n";
		cout << "1.- Espadazo \n";
		cout << "2.- Sopapo \n";
		if (magicPoints > 0) {
			cout << "3.- Magia\n";
		}
		cin >> attackChoose;
		if (attackChoose <= 0 || attackChoose > 3) {
			cout << "El ataque seleccionado no es correcto. Por favor, elige una opcion valida. \n";
		}
		if (attackChoose == 3) {
			if (magicPoints > 0) {
				magicPoints--;
			}
			else {
				attackChoose = 0;
				cout << "No te queda magia. Por favor selecciona un ataque que puedas usar. \n";
			}
		}
	}
	if (attackChoose == 1) {
		return espadazoValue;
	}
	else if (attackChoose == 2) {
		return sopapoValue;
	}
	else {
		return magicValue;
	}
}
void heroAttackEnemy(int& enemyHP, string enemyName) {
	cout << "Atacas al enemigo " << enemyName << " y le haces un danyo de " << heroDamage << " \n";
	enemyHP -= heroDamage;
	if (enemyHP <= 0) {
		cout << "Te has cargado al enemigo " << enemyName << " \n";
		enemyHP = 0;
	}
	else {
		cout << "El enemigo " << enemyName << " tiene " << enemyHP << " puntos de vida\n";
	}
}

void enemyAttack(string enemyName, int damage) {
	heroHP = heroHP - damage;
	if (heroHP > 0) {
		cout << "El enemigo " << enemyName << " te ha atacado y te quedan " << heroHP << " puntos de vida\n";
	}
	else {
		cout << "El enemigo " << enemyName << " te ha atacado y te ha matado. El mundo esta condenado. \n";
		heroIsAlive = false;
	}
}

int main() {
	gameStart();
	while (heroIsAlive && (enemyIsAlive1 || enemyIsAlive2)) {
		
		enemyChoosed = chooseEnemy();
		
		heroDamage = chooseAttack();if (enemyChoosed == 1) {
			
			heroAttackEnemy(enemyHP1, enemyName1);
			enemyIsAlive1 = checkEnemyStatus(enemyName1, enemyHP1, enemyName2, enemyHP2);
		}
		else {
		
			heroAttackEnemy(enemyHP2, enemyName2);
			enemyIsAlive2 = checkEnemyStatus(enemyName1, enemyHP1, enemyName2, enemyHP2);
		}

		if (enemyIsAlive1 && heroIsAlive) {
			enemyAttack(enemyName1, 30 + rand() % 20);
		}
		
		if (enemyIsAlive2 && heroIsAlive) {
			enemyAttack(enemyName2, 30 + rand() % 20);
		}
		if (!heroIsAlive) {
			cout << "Has perdido el juego. Fin de la partida. \n";
		}
		else {
			cout << "Has ganado el juego. Fin de la partida. \n";
		}
		return 0;
	}
}
